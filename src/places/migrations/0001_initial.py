# Generated by Django 3.2.8 on 2021-11-06 09:25

from django.db import migrations, models
import django.db.models.deletion
import places.utilities


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('name_ru', models.CharField(max_length=32, verbose_name='Название')),
                ('name_uk', models.CharField(max_length=32, verbose_name='Назва')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='main_app.region', verbose_name='Region')),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, verbose_name='Name')),
                ('slug', models.SlugField(max_length=64, verbose_name='Slug')),
                ('address', models.CharField(blank=True, max_length=256, verbose_name='Address')),
                ('phone_number', models.CharField(blank=True, max_length=32, verbose_name='Phone Number')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('description_ru', models.TextField(blank=True, verbose_name='Описание')),
                ('description_uk', models.TextField(blank=True, verbose_name='Опис')),
                ('url_address', models.URLField(blank=True, verbose_name='URL Address')),
                ('image_place', models.ImageField(upload_to=places.utilities.get_place_path, verbose_name='Image Place')),
                ('image_watermark', models.ImageField(blank=True, upload_to=places.utilities.get_watermark_path, verbose_name='Image Watermark')),
                ('watermark_position', models.CharField(choices=[('1', 'top left'), ('2', 'top right'), ('3', 'bottom left'), ('4', 'bottom middle'), ('5', 'bottom right')], default='5', max_length=1, verbose_name='Watermark Position')),
                ('watermark_scale', models.IntegerField(choices=[(2, '1/2'), (4, '1/4'), (5, '1/5'), (8, '1/8'), (10, '1/10'), (15, '1/15'), (20, '1/20'), (25, '1/25')], default=15, verbose_name='Watermark Scale')),
                ('working_hours', models.CharField(blank=True, max_length=32, verbose_name='Working Hours')),
                ('average_check', models.CharField(blank=True, choices=[('100', '100'), ('200', '200'), ('300', '300'), ('400', '400'), ('500', '500'), ('600', '600'), ('700', '700'), ('800', '800'), ('900', '900'), ('1000', '1000'), ('1100', '1100'), ('1200', '1200'), ('1300', '1300'), ('1400', '1400'), ('1500', '1500'), ('1600', '1600'), ('1700', '1700'), ('1800', '1800'), ('1900', '1900'), ('2000', '2000'), ('2100', '2100'), ('2200', '2200'), ('2300', '2300'), ('2400', '2400'), ('2500', '2500'), ('2600', '2600'), ('2700', '2700'), ('2800', '2800'), ('2900', '2900'), ('3000', '3000')], max_length=4, verbose_name='Average Check')),
                ('bank_card', models.BooleanField(default=False, verbose_name='Bank Card')),
                ('wi_fi', models.BooleanField(default=False, verbose_name='Wi-Fi')),
                ('parking', models.BooleanField(default=False, verbose_name='Parking')),
                ('delivery', models.BooleanField(default=False, verbose_name='Delivery')),
                ('catering', models.BooleanField(default=False, verbose_name='Catering')),
                ('bar', models.BooleanField(default=False, verbose_name='Bar')),
                ('hookah', models.BooleanField(default=False, verbose_name='Hookah')),
                ('restaurant', models.BooleanField(default=False, verbose_name='Restaurant')),
                ('night_club', models.BooleanField(default=False, verbose_name='Night Club')),
                ('karaoke', models.BooleanField(default=False, verbose_name='Karaoke')),
                ('veranda', models.BooleanField(default=False, verbose_name='Veranda')),
                ('strip_club', models.BooleanField(default=False, verbose_name='Strip Club')),
                ('brewery', models.BooleanField(default=False, verbose_name='Brewery')),
                ('bowling', models.BooleanField(default=False, verbose_name='Bowling')),
                ('coffee_house', models.BooleanField(default=False, verbose_name='Coffee House')),
                ('educational_project', models.BooleanField(default=False, verbose_name='Educational Project')),
                ('entertainment', models.BooleanField(default=False, verbose_name='Entertainment (various events)')),
                ('health', models.BooleanField(default=False, verbose_name='Health (or fitness)')),
                ('store', models.BooleanField(default=False, verbose_name='Store')),
                ('kitchen_european', models.BooleanField(default=False, verbose_name='Kitchen European')),
                ('kitchen_american', models.BooleanField(default=False, verbose_name='Kitchen American')),
                ('kitchen_italian', models.BooleanField(default=False, verbose_name='Kitchen Italian')),
                ('kitchen_author', models.BooleanField(default=False, verbose_name='Kitchen Author')),
                ('kitchen_ukrainian', models.BooleanField(default=False, verbose_name='Kitchen Ukrainian')),
                ('kitchen_belarusian', models.BooleanField(default=False, verbose_name='Kitchen Belarusian')),
                ('kitchen_russian', models.BooleanField(default=False, verbose_name='Kitchen Russian')),
                ('kitchen_armenian', models.BooleanField(default=False, verbose_name='Kitchen Armenian')),
                ('kitchen_azerbaijani', models.BooleanField(default=False, verbose_name='Kitchen Azerbaijani')),
                ('kitchen_georgian', models.BooleanField(default=False, verbose_name='Kitchen Georgian')),
                ('kitchen_spanish', models.BooleanField(default=False, verbose_name='Kitchen Spanish')),
                ('kitchen_mexican', models.BooleanField(default=False, verbose_name='Kitchen Mexican')),
                ('kitchen_japanese', models.BooleanField(default=False, verbose_name='Kitchen Japanese')),
                ('kitchen_indian', models.BooleanField(default=False, verbose_name='Kitchen Indian')),
                ('place_day', models.BooleanField(default=False, verbose_name='Place Day')),
                ('is_closed', models.BooleanField(default=False, verbose_name='Is Closed')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='places', to='places.district', verbose_name='District')),
                ('region', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='places', to='main_app.region', verbose_name='Region')),
            ],
            options={
                'verbose_name': 'Place',
                'verbose_name_plural': 'Places',
                'ordering': ['name'],
            },
        ),
    ]
