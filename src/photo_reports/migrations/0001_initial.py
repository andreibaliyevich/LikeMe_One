# Generated by Django 3.2.8 on 2021-11-06 09:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import easy_thumbnails.fields
import photo_reports.utilities


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main_app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('places', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhotoReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('title', models.CharField(db_index=True, default='new photo report', max_length=128, verbose_name='Title')),
                ('slug', models.SlugField(default='new-photo-report', max_length=128, verbose_name='Slug')),
                ('pay_to_photographer', models.IntegerField(db_index=True, default=0, verbose_name='Pay to Photographer')),
                ('pay_to_portal', models.IntegerField(db_index=True, default=0, verbose_name='Pay to Portal')),
                ('main_image', easy_thumbnails.fields.ThumbnailerImageField(default='covers/hidden.jpg', upload_to=photo_reports.utilities.get_cover_path, verbose_name='Main Image')),
                ('is_plus_18', models.BooleanField(default=False, verbose_name='+18')),
                ('is_posted', models.BooleanField(default=False, verbose_name='Is Posted')),
                ('num_views', models.IntegerField(default=0, verbose_name='Num Views')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photoreports', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('authors', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Authors')),
                ('place', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='photoreports', to='places.place', verbose_name='Place')),
                ('region', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='photoreports', to='main_app.region', verbose_name='Region')),
            ],
            options={
                'verbose_name': 'Photoreport',
                'verbose_name_plural': 'Photoreports',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=photo_reports.utilities.get_photo_path, verbose_name='Image')),
                ('thumbnail', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to=photo_reports.utilities.get_thumbnail_path, verbose_name='Thumbnail')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is Available')),
                ('is_cover', models.BooleanField(default=False, verbose_name='Is Cover')),
                ('photo_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='photo_reports.photoreport')),
            ],
            options={
                'verbose_name': 'Photo',
                'verbose_name_plural': 'Photos',
            },
        ),
        migrations.CreateModel(
            name='PhotoLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_like', models.BooleanField(default=True, verbose_name='Is like')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_like', to='photo_reports.photo', verbose_name='Photo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_like', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Photo Like',
                'verbose_name_plural': 'Photo Likes',
                'ordering': ['-id'],
                'unique_together': {('user', 'photo')},
            },
        ),
    ]
